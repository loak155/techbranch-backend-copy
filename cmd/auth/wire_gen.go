// Code generated by Wire. DO NOT EDIT.

//go:generate go run github.com/google/wire/cmd/wire
//go:build !wireinject
// +build !wireinject

package main

import (
	"github.com/loak155/techbranch-backend/internal/auth/router"
	"github.com/loak155/techbranch-backend/internal/auth/usecase"
	"github.com/loak155/techbranch-backend/internal/pkg/config"
	"github.com/loak155/techbranch-backend/internal/pkg/jwt"
	"github.com/loak155/techbranch-backend/internal/user/client"
	"github.com/loak155/techbranch-backend/proto/auth"
	"google.golang.org/grpc"
)

// Injectors from wire.go:

func InitServer(conf *config.Config, grpcServer *grpc.Server) (auth.AuthServiceServer, error) {
	userServiceClient, err := client.NewUserGRPCClient(conf)
	if err != nil {
		return nil, err
	}
	jwtManager := jwt.NewJwtManager(conf)
	iAuthUsecase := usecase.NewAuthUsecase(userServiceClient, jwtManager)
	authServiceServer := router.NewAuthGRPCServer(grpcServer, iAuthUsecase)
	return authServiceServer, nil
}
